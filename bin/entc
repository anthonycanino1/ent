#!/bin/sh

prg=`basename "$0"`
dir=`dirname "$0"`/..

joe="$dir/joe/joe.rb"

usage() {
  polyglot -h
  cat <<EOF
  -j <jvm-options>         pass options to the Java VM
  -J <jvm>                 use a different Java VM (default java in path)
  -V                       echo the java command
EOF
}

fixclasspath() {
  windows=0

  if [ `uname | grep -c CYGWIN` -ne 0 ]; then
    windows=1
  fi

  cp="$1"
  if [ "$windows" = 1 ]; then 
      cygpath -pw "$cp"
  else
      echo "$cp"
  fi
}

extra_cp=
args=
vmargs=
classpath=$JAVA_PATH
java=/home/acanino/Src/jdk1.8.0_60/bin/java
ext=panda

polyglot() {
  #eval "$java" "$vmargs" -classpath "'$classpath'" -agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=y panda.Main "$@"
  eval "$java" "$vmargs" -classpath "'$classpath'" panda.Main "$@"
}

while true; do
    case "$1" in
        "")
            break
            ;;
        -V)
            verbose=1
            shift
            ;;
        -classpath|-cp)
            shift
            extra_cp="$extra_cp:$1"
            shift
            ;;
        -j)
            shift
            vmargs="$vmargs '$1'"
            shift
            ;;
        -J)
            shift
            java="'$1'"
            shift
            ;;
        -h)
            usage=1
            break
            ;;
        *)
            args="$args $1"
            shift
            ;;
    esac
done

#if [ -n "$ext" ]; then
#  args="-sx '$ext' $args"
#fi 
joe_args=`$joe -l pan "$args"`

#classpath=$classpath:"$dir/compiler/classes:$dir/runtime/classes:$dir/lib/polyglot.jar:$dir/lib/java_cup.jar:$dir/lib/jsr305-1.3.9.jar:$dir/lib/guava-18.0.jar"
classpath=$classpath:"$dir/compiler/classes:$dir/runtime/classes:$dir/lib/polyglot.jar:$dir/lib/java_cup.jar"
if [ -n "$ext" ]; then
  classpath="$classpath:$dir/lib/$ext.jar"
fi
classpath="$classpath:$extra_cp"
classpath=`fixclasspath "$classpath"`

if [ "$usage" = 1 ]; then
  usage
  exit 0
fi

if [ "$verbose" = 1 ]; then
  echo "$java" "$vmargs" -classpath "'$classpath'" "$@"
fi

polyglot "-assert -simpleoutput $joe_args"
#polyglot "-assert -simpleoutput -dontTranslatePanda $joe_args"
