# pth test script
#
# This file is a test script for pth (Polyglot Test Harness). It
# conforms to the following grammar.
#
#      ScriptFile   ::= CompilerTest+
#      CompilerTest ::= ExtClassName ["CmdLineArgs"] { FileTest [; FileTest]* }
#      FileTest     ::= CompilationUnits [Description] [FailureSet]
#  CompilationUnits ::= Filenames [, Filenames]*
#      Filenames    ::= Filename [Filename]*
#      Description  ::= LitString
#      FailureSet   ::= Failure [, Failure]*
#      Failure      ::= ( ErrorKind )
#                    |  ( ErrorKind, "RegExp" )
#                    |  ( "RegExp" )
#                    |  ( )
#      ErrorKind    :   one of, or a unique prefix of one of the following 
#                       strings: "Warning", "Internal Error", "I/O Error", 
#                       "Lexical Error", "Syntax Error", "Semantic Error"
#                       or "Post-compiler Error".
#      Filename     :   the name of a file. Is interpreted from the 
#                       directory where pth is run.
#      LitString    :   a literal string, enclosed in quotes.
#      RegExp       :   a regular expression, as in java.util.regex; 
#                       is always enclosed in quotes.
#      CmdLineArgs  :   additional command line args for the Polyglot 
#                       compiler; is always enclosed in quotes.

ent.EntExtensionInfo "-d out" {
  waterfall_good1/A.java ;
  waterfall_good2/A.java ;
  waterfall_good3/A.java ;
  waterfall_good4/A.java ;
  waterfall_good5/A.java ;

  waterfall_bad1/A.java (Semantic, "Cannot send message") ;
  waterfall_bad2/A.java (Semantic, "Cannot send message") ;
  waterfall_bad3/A.java 
    (Semantic, "Cannot send message") ,
    (Semantic, "Cannot send message") ;

  snapshot_good1/A.java snapshot_good1/B.java ;
  snapshot_good2/A.java snapshot_good2/B.java ;
  snapshot_good3/A.java snapshot_good3/B.java ;

  snapshot_bad1/A.java snapshot_bad1/B.java 
    (Semantic, "Cannot send message") ,
    (Semantic, "Cannot send message") ;

  snapshot_bad2/A.java snapshot_bad2/B.java 
    (Semantic, "Cannot send message") ;

  snapshot_bad3/A.java snapshot_bad3/B.java 
    (Semantic, "Cannot send message") ,
    (Semantic, "Cannot send message") ;
    
  constraint_check1/A.java 
    (Semantic, "cannot satisfy constraint") ,
    (Semantic, "cannot satisfy constraint") ; 

  constraint_check2/A.java 
    (Semantic, "cannot be called") , 
    (Semantic, "cannot be called") ; 

  constraint_check3/A.java (Semantic, "cannot satisfy constraint") ; 

  constraint_check4/A.java constraint_check4/B.java (Semantic, "cannot satisfy constraint") ; 

  overmode_good1/A.java overmode_good1/B.java ;
  overmode_good2/A.java overmode_good2/B.java ;
  overmode_good3/A.java overmode_good3/B.java ;

  overmode_bad1/A.java overmode_bad1/B.java (Semantic, "Cannot send message") ;
  overmode_bad2/A.java overmode_bad2/B.java 
    (Semantic, "Cannot send message") ,
    (Semantic, "Cannot send message") ;

  overmode_bad3/A.java overmode_bad3/B.java 
    (Semantic, "Cannot send message") ,
    (Semantic, "Cannot send message") ;

  snapshot_pass1/A.java snapshot_pass1/B.java ;
  snapshot_pass2/A.java snapshot_pass2/B.java ;
  snapshot_fail1/A.java snapshot_fail1/B.java ;
}
